#include <iostream>
using namespace std;

bool all_digits_same(int number) {
    int last_digit = number % 10;
    while (number > 0) {
        if (number % 10 != last_digit) {
            return false;
        }
        number /= 10;
    }
    return true;
}

void sort_descending(int* array, int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (array[i] < array[j]) {
                int temp = array[i];
                array[i] = array[j];
                array[j] = temp;
            }
        }
    }
}

int main() {
    setlocale(LC_ALL, "Russian");
    int n;
    cout << "Введите число элементов: ";
    cin >> n;

    if (n <= 0 || n > 10000) {
        cout << "Неверный ввод" << endl;
        return 1;
    }

    int* array = new int[n];
    cout << "Введите элементы последовательности: ";
    bool has_all_same_digits = false;

    for (int i = 0; i < n; i++) {
        cin >> array[i];
        if (all_digits_same(array[i])) {
            has_all_same_digits = true;
        }
    }

    if (!has_all_same_digits) {
        sort_descending(array, n);
    }

    for (int i = 0; i < n; i++) {
        cout << array[i] << " ";
    }
    cout << endl;

    delete[] array;
    return 0;
}

// номер 2

#include <iostream>
using namespace std;

int digits_sum(int number) {
    int sum = 0;
    while (number > 0) {
        sum += number % 10;
        number /= 10;
    }
    return sum;
}

int first_digit(int number) {
    while (number >= 10) {
        number /= 10;
    }
    return number;
}

void sort_array(int* array, int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            int first_a = first_digit(array[j]);
            int first_b = first_digit(array[j + 1]);

            if (first_a > first_b ||
                (first_a == first_b && digits_sum(array[j]) > digits_sum(array[j + 1])) ||
                (first_a == first_b && digits_sum(array[j]) == digits_sum(array[j + 1]) && array[j] > array[j + 1])) {
                int temp = array[j];
                array[j] = array[j + 1];
                array[j + 1] = temp;
            }
        }
    }
}

int main() {
    setlocale(LC_ALL, "Russian");
    int n;
    cout << "Введите размер: ";
    cin >> n;

    if (n <= 0 || n > 1000) {
        cout << "Неправильный ввод." << endl;
        return 1;
    }

    int array[1000];

    cout << "Введите элементы последовательности: ";
    for (int i = 0; i < n; i++) {
        cin >> array[i];
    }

    sort_array(array, n);

    for (int i = 0; i < n; i++) {
        cout << array[i] << " ";
    }
    cout << endl;

    return 0;
}

//номер 3

#include <iostream>
using namespace std;

int main() {
    setlocale(LC_ALL, "Russian");

    int n, m;

    cout << "Введите количество строк: ";
    cin >> n;
    cout << "Введите количество столбцов: ";
    cin >> m;

    if (n > 100 || m > 100) {
        cout << "Неверный ввод." << endl;
        return 1;
    }

    int A[100][100];

    cout << "Введите элементы матрицы:" << endl;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> A[i][j];
        }
    }

    int max_row_sum = -1;
    int row_with_max_sum = -1;  

    for (int i = 0; i < n; i++) {
        int row_sum = 0;

        for (int j = 0; j < m; j++) {
            row_sum += A[i][j];
        }

        if (row_sum > max_row_sum) {
            max_row_sum = row_sum;
            row_with_max_sum = i;  
        }
    }

    for (int j = 0; j < m; j++) {
        A[row_with_max_sum][j] += 1;
    }

    cout << "Новая матрица:" << endl;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cout << A[i][j] << " ";
        }
        cout << endl;
    }

    return 0;
}


//номер 4

#include <iostream>
using namespace std;

int digits_sum(int number) {
    int sum = 0;
    while (number > 0) {
        sum += number % 10;
        number /= 10;
    }
    return sum;
}

bool is_palindrome(int number) {
    int original = number;
    int reversed = 0;
    while (number > 0) {
        reversed = reversed * 10 + (number % 10);
        number /= 10;
    }
    return original == reversed;
}

int main() {
    setlocale(LC_ALL, "Russian");

    int n;

    cout << "Введите количество элементов: ";
    cin >> n;

    if (n <= 0 || n > 10000) {
        cout << "Неверный ввод." << endl;
        return 1;
    }

    int* array = new int[n];
    bool* seen = new bool[10001]();

    cout << "Введите элементы последовательности: ";
    for (int i = 0; i < n; i++) {
        cin >> array[i];
    }

    cout << "Начальная матрица: ";
    for (int i = 0; i < n; i++) {
        cout << array[i] << " ";
    }
    cout << endl;

    int new_size = 0;

    for (int i = 0; i < n; i++) {
        int current = array[i];

        if (digits_sum(current) != 10) {
            if (!seen[current]) {
                seen[current] = true;
                array[new_size++] = current;
            }
            if (is_palindrome(current)) {
                array[new_size++] = current;
            }
        }
    }

    cout << "Новая матрица: ";
    for (int i = 0; i < new_size; i++) {
        cout << array[i] << " ";
    }
    cout << endl;

    delete[] array;
    delete[] seen;

    return 0;
}

